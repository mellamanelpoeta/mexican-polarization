[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "mexican-polarization",
    "section": "",
    "text": "The library is still in construction, since adaptation to multiple workflows are on the run"
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "mexican-polarization",
    "section": "",
    "text": "The library is still in construction, since adaptation to multiple workflows are on the run"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "mexican-polarization",
    "section": "How to use",
    "text": "How to use\n\nComing soon"
  },
  {
    "objectID": "analyzer.html",
    "href": "analyzer.html",
    "title": "Analyzer",
    "section": "",
    "text": "source\n\nAnalyzer\n\n Analyzer (loader:mexican_polarization.Loader.Loader)\n\nConstructor of the Analyzer class\n\nsource\n\n\nAnalyzer.moral_words_count\n\n Analyzer.moral_words_count (message_col:str)\n\nReturns a dataframe with the count of virtue and vice words in each message in the message_col column\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nmessage_col\nstr\nColumn with the messages\n\n\nReturns\nDataFrame\nDataFrame with extra counting columns\n\n\n\n\nsource\n\n\nAnalyzer.moral_words_wc\n\n Analyzer.moral_words_wc (message_col:str, media_names:str)\n\nCreates a wordcloud with the virtue and vice words in the message_col column\n\n\n\n\nType\nDetails\n\n\n\n\nmessage_col\nstr\nColumn with the messages\n\n\nmedia_names\nstr\nColumn with media names"
  },
  {
    "objectID": "loader.html",
    "href": "loader.html",
    "title": "Loader",
    "section": "",
    "text": "source\n\nLoader\n\n Loader (csv:str, virtue_dict:str, vice_dict:str)\n\nConstructor for the Loader class\n\n\n\n\nType\nDetails\n\n\n\n\ncsv\nstr\nPath to the csv file\n\n\nvirtue_dict\nstr\nPath to the virtue dictionary\n\n\nvice_dict\nstr\nPath to the vice dictionary\n\n\n\n\nsource\n\n\nLoader.process_csv\n\n Loader.process_csv (text_cols:list, num_cols:list, date_cols:list)\n\nCleans the columns of the csv file prior the polarization analysis\n\n\n\n\nType\nDetails\n\n\n\n\ntext_cols\nlist\nList of text columns to process\n\n\nnum_cols\nlist\nList of numeric columns to process\n\n\ndate_cols\nlist\nList of date columns to process\n\n\n\n\nsource\n\n\nLoader.set_virtue_dict\n\n Loader.set_virtue_dict (virtue_dict:str)\n\nSets the virtue dictionary\n\n\n\n\nType\nDetails\n\n\n\n\nvirtue_dict\nstr\nPath to the virtue dictionary\n\n\n\n\nsource\n\n\nLoader.set_vice_dict\n\n Loader.set_vice_dict (virtue_dict:str)\n\nSets the virtue dictionary\n\n\n\n\nType\nDetails\n\n\n\n\nvirtue_dict\nstr\nPath to the virtue dictionary\n\n\n\n\nsource\n\n\nLoader.set_csv\n\n Loader.set_csv (csv:str)\n\nSets the csv file\n\n\n\n\nType\nDetails\n\n\n\n\ncsv\nstr\nPath to the csv file\n\n\n\n\nsource\n\n\nLoader.set_processed\n\n Loader.set_processed (processed:pandas.core.frame.DataFrame)\n\nSets the processed dataframe\n\n\n\n\nType\nDetails\n\n\n\n\nprocessed\nDataFrame\nProcessed dataframe"
  },
  {
    "objectID": "classifier.html",
    "href": "classifier.html",
    "title": "Classifier",
    "section": "",
    "text": "#negative_words file\ndf = pd.read_csv('negative_words.csv')\ndf = df.drop(columns=['original']) #drop it since it contains the concept with an * in it\n\nneg_words = [] \nfor _, row in df.iterrows():\n    for item in row:\n        if pd.notnull(item):\n            neg_words.append(item)\n#Drop duplicates in neg_words:\nneg_words = list(set(neg_words))\n\nlen(neg_words)\n\n1599\n#moral_foundations_dictionary file:\ndf = pd.read_csv('moral_foundations_dictionary_1.0.csv')\ndf = df[['categories','word_examples']]\n\nvirtue = []\nvice = []\nfor _, row in df.iterrows():\n    if pd.notnull(row['word_examples']):\n        words = row['word_examples'].split(',')\n        if 'Virtue' in row['categories']:\n            virtue.extend(words)\n        elif 'Vice' in row['categories']:\n            vice.extend(words)\n        else:\n            print(words)\n\n['moralidad']\n['moral']\n['etica']\n['etico']\n['principios']\n['valores']\n['bueno', ' buena']\n['bondadoso']\n['correcto']\n['erroneo', ' equivocado', ' incorrecto', ' malo']\n['justicia']\n['fechoria', ' pecado', ' indebido']\n['virtud']\n['vicioso']\n['moralidad']\n['etica']\nvirtue.extend(['moralidad','moral','etica','etico','principios','valores','bueno','buena','bondadoso','correcto','justicia','virtud','moralidad','etica'])\nvice.extend(['erroneo','equivocado','incorrecto','malo','fechoria','pecado','indebido','vicioso'])\n#Drop duplicates in virtue and vice:\nvirtue = list(set(virtue))\nvice = list(set(vice))\n\nprint('vice examples: ', vice[:10])\nprint('virtue examples: ', virtue[:10])\n\nprint('vice length: ', len(vice))\nprint('virtue length: ', len(virtue))\n\nvice examples:  ['mientes', 'extrañando', ' disociable', 'confrontar', 'atrocidad', 'insistir ', 'herido', 'salvaje', 'esceptico', 'pateticos']\nvirtue examples:  [' beneficiar', 'maternal', 'seguir', ' ecuanimidad', 'supremacía', 'patriotico', ' justicia', 'refugiar', 'paternal', 'estatus']\nvice length:  1719\nvirtue length:  217\nWe have a bigger proportion of vice words which may have an important effect on the tagging task usin KNN\n#Load the embeddings to data frame:\ndef load_embeddings(file_path):\n    word_to_vec = {}\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            values = line.split()\n            word = values[0]\n            vector = np.array(values[1:], dtype='float32')\n            word_to_vec[word] = vector\n    return word_to_vec\n\nword_to_vec = load_embeddings('vectorspol.txt')\none = set(vice)\ntwo = set(neg_words)\n\nvice = list(one.union(two))\n# Total words\nprint(len(vice)+len(virtue))\n\n1936\nwords = vice + virtue\nwords = set(words)\nsource"
  },
  {
    "objectID": "classifier.html#vice-words",
    "href": "classifier.html#vice-words",
    "title": "Classifier",
    "section": "Vice words",
    "text": "Vice words\n\ndf[df['category'] == 0.0]\n\n\n\n\n\n\n\n\nword\nvector\ncategory\n\n\n\n\n0\ndesintegrado\n[0.1409, -0.281743, -0.021933, 0.063962, 0.363...\n0.0\n\n\n1\nconfrontar\n[0.52358, -0.042034, 0.196349, -0.10303, -0.01...\n0.0\n\n\n2\narruina\n[0.440164, -0.520216, 0.281926, 0.316728, 0.11...\n0.0\n\n\n3\nherido\n[0.435823, -0.5486, 0.689534, 0.293683, 0.1012...\n0.0\n\n\n4\nagresiva\n[0.123496, -0.358881, 0.211074, 0.103301, 0.04...\n0.0\n\n\n...\n...\n...\n...\n\n\n896\nmelancolia\n[0.100793, 0.07003, -0.095927, -0.148693, -0.4...\n0.0\n\n\n897\ndecepciona\n[0.166685, -0.138134, -0.523206, -0.21429, -0....\n0.0\n\n\n898\npesimismo\n[-0.158406, 0.275918, -0.5823, 0.252241, -0.29...\n0.0\n\n\n899\nbastarda\n[-0.664042, -0.583431, 0.31007, -0.036613, 0.0...\n0.0\n\n\n900\nperversa\n[0.062627, -1.33138, 0.117078, -0.129269, -0.0...\n0.0\n\n\n\n\n901 rows × 3 columns"
  },
  {
    "objectID": "classifier.html#virtue-words",
    "href": "classifier.html#virtue-words",
    "title": "Classifier",
    "section": "Virtue words",
    "text": "Virtue words\n\ndf[df['category'] == 1.0].reset_index(drop=True)\n\n\n\n\n\n\n\n\nword\nvector\ncategory\n\n\n\n\n0\nmaternal\n[0.325435, 0.10564, 0.775151, -0.238141, -0.29...\n1.0\n\n\n1\nseguir\n[0.929292, 0.084175, -0.086734, 0.031077, -0.4...\n1.0\n\n\n2\npatriotico\n[-0.391148, -0.314462, -0.495306, -0.404786, -...\n1.0\n\n\n3\npaternal\n[-0.164871, -0.043165, 0.527002, -0.032622, -0...\n1.0\n\n\n4\nestatus\n[0.195135, 0.061412, 0.429363, 0.509251, -0.02...\n1.0\n\n\n...\n...\n...\n...\n\n\n109\ncastigo\n[0.300206, 0.182386, -0.113264, 0.146073, -0.6...\n1.0\n\n\n110\netica\n[-0.098628, 0.139114, 0.198292, -0.141415, 0.2...\n1.0\n\n\n111\nritual\n[0.383331, -0.649981, 0.623369, -0.128588, -0....\n1.0\n\n\n112\nempatia\n[-0.079985, 0.049216, -0.123454, 0.110934, 0.0...\n1.0\n\n\n113\nbueno\n[0.717693, 0.01057, 0.502308, 0.411575, -0.427...\n1.0\n\n\n\n\n114 rows × 3 columns\n\n\n\n\nX = np.array(df['vector'].tolist())\nprint(X)\ny = np.array(df['category'].tolist())\nprint(y)\n\n[[ 0.1409   -0.281743 -0.021933 ...  0.102292  0.35555  -0.487593]\n [ 0.52358  -0.042034  0.196349 ...  0.283234  0.035956 -0.422202]\n [ 0.440164 -0.520216  0.281926 ... -0.381815 -0.04618  -0.25785 ]\n ...\n [ 0.383331 -0.649981  0.623369 ...  0.21622  -0.19366  -0.12253 ]\n [-0.079985  0.049216 -0.123454 ... -0.117718  0.042928 -0.343779]\n [ 0.717693  0.01057   0.502308 ... -0.425821  0.07154  -0.010166]]\n[0. 0. 0. ... 1. 1. 1.]\n\n\n\nX_train, X_test, y_train, y_test = train_test_split(df['vector'], df['category'], test_size=0.1, random_state=21,stratify=df['category'])\nX_train = X_train.to_list()\nknn = KNeighborsClassifier(n_neighbors=3)\nknn.fit(X_train, y_train)\nX_test = X_test.to_list()\nprint(round(knn.score(X_test, y_test),3))\n\n0.922\n\n\n\ntest_accuracies = {}\nneighbours = range(1, 30)\n\nfor neighbour in neighbours:\n    knn = KNeighborsClassifier(n_neighbors=neighbour)\n    knn.fit(X_train, y_train)\n    test_accuracies[neighbour] = knn.score(X_test, y_test)\n    \nplt.figure(figsize=(8,6))\nplt.title('KNN Accuracy: Varying number of neighbours')\nplt.plot(list(test_accuracies.keys()), list(test_accuracies.values()))\nplt.legend()\nplt.xlabel('Number of neighbours')\nplt.ylabel('Accuracy')\nplt.show()\n\nprint('Best accuracy and number of neighbours: ', max(test_accuracies.items(), key=lambda x: x[1]))\n\nNo artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n\n\n\n\n\nBest accuracy and number of neighbours:  (7, 0.9313725490196079)\n\n\n\nUsing the model to tag adjectives found on media*\n\nIssues to be solved…\n\n\nknn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X,y)\n\nKNeighborsClassifier()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.KNeighborsClassifierKNeighborsClassifier()\n\n\n\n#Adjs found in comments using spaCy library:\nadjs = set()\nwith open('adjs_comments.txt', 'r', encoding='utf-8') as file:\n    for line in file:\n        adjs.add(line.strip())\n\nadjs = list(adjs)\nprint(adjs[:10])\nprint(len(adjs))\n\n['pobresprianistas', 'pri', 'verdaderas', 'agual', 'mientes', 'nesita', 'hermosa', 'fcg', 'lorenzo', 'prmitido']\n1642\n\n\n\n#Adjs from comments but not in words:\nadjs_set = set(adjs)\ndiference = adjs_set.difference(words)\nprint(len(diference))\nprint(diference)\n\n1538\n{'pobresprianistas', 'pri', 'verdaderas', 'agual', 'nesita', 'hermosa', 'fcg', 'lorenzo', 'prmitido', 'odiado', 'curado', 'neutrales', 'involucrado', 'malditos', 'comercial', 'bende', 'caros', 'electorales', 'mismopero', 'mantenidoscorruptos', 'evitense', 'demas', 'robado', 'exacta', 'aferrado', 'paraditos', 'privilegios', 'pejistas', 'impotente', 'entoloachado', 'pirque', 'sencilla', 'alcaldias', 'campesino', 'mudos', 'by', 'limpia', 'raterossalta', 'incondicionales', 'saqueado', 'opositores', 'ocicon', 'cortos', 'despotas', 'secuestrado', 'calmado', 'profesional', 'deberia', 'capitalista', 'bandido', 'vestidas', 'importantes', 'encubierto', 'fumastes', 'conscientes', 'fregado', 'necesitados', 'amolado', 'ables', 'diputados', 'lleno', 'politicas', 'institucionalizados', 'grandes', 'cercania', 'caro', 'mmmdas', 'interno', 'm@men', 'intachable', 'pagadas', 'alimentos', 'entero', 'apestosas', 'apasear', 'maya', 'creibles', 'pobrecitos', 'basica', 'corrptos', 'trabajadoras', 'veracruz', 'incompetentesmediocres', 'poqiquitos', 'exelente', 'biendolos', 'democratico', 'elbolsillo', 'arrastrados', 'votado', 'publicos', 'salio', 'elhechalo', 'veznobqueda', 'obrigatoria', 'contras', 'estafador', 'engreidos', 'asta', 'llenas', 'agresivos', 'enquistados', 'ormigs', 'honestos', 'actual', 'qnomme', 'ligera', 'representates', 'hechoellos', 'pagado', 'podridos', 'verdespenejo', 'discriminatorio', 'foxcada', 'mediocre', 'primeros', 'espanola', 'soltado', 'unificadorno', 'minima', 'idiotizado', 'municipal', 'peorcito', 'pobres', 'marihuanol', 'hermosos', 'mochada', 'adinerados', 'ningun', 'malevolos', 'acsrreados', 'pertinentes', 'rosas', 'confiable', 'inepto', 'senor', 'industriales', 'honesta', 'maiceado', 'prestigiada', 'debilito', 'privilegiada', 'nazi', 'quemados', 'propuesta', 'adulta', 'decual', 'avbio', 'largo', 'vitacilina', 'oceanica', 'fraudes', 'asquerosasvendidos', 'acrarreador', 'elctoral', 'aferrados', 'insensibles', 'rapaz', 'indibiduo', 'viejio', 'traido', 'demexico', 'igualvendidos', 'sahagun', 'pueblosolo', 'envidiosote', 'lozonso', 'defendidos', 'corta', 'miserables', 'propiaarriba', 'miradas', 'saqueadores', 'acarriada', 'defendiendolos', 'detocs', 'afectada', 'obligados', 'real', 'maldita', 'devores', 'politica', 'europeo', 'huevones', 'unido', 'federal', 'siega', 'cagadas', 'stpdo', 'sicaro', 'graciosos', 'sumado', 'vendepatrias', 'arrugado', 'ratasvendidos', 'trabajador', 'plena', 'quierenestos', 'independientes', 'hijos', 'atarantado', 'mendigos', 'superinteligentisimo', 'media', 'millonarios', 'jamas', 'lindo', 'vivos', 'beneficiados', 'junta', 'purita', 'seco', 'manipulados', 'criado', 'acusalo', 'desinflado', 'legales', 'incondicional', 'quesadapues', 'snganos', 'ofenza', 'quretino', 'grabadora', 'seria', 'plagada', 'presidentes', 'decomiso', 'civil', 'atraves', 'familiar', 'anti', 'avalado', 'partidos', 'increible', 'lunatico', 'crecida', 'electronicos', 'mejor', 'institucionlos', 'facil', 'jajajaja', 'hombreeso', 'libre', 'enganada', 'maximo', 'estadista', 'asustados', 'garrapatas', 'ofendidos', 'verde', 'estepincheviejodecrepitoyanadamasleqedololoco', 'chupado', 'grande', 'alborotada', 'acarreado', 'absoluta', 'mariguanol', 'perversos', 'nuevos', 'enemigos', 'primera', 'dura', 'nueva', 'vidente', 'callado', 'jjjjjjjj', 'amlolo', 'amucha', 'tranquilo', 'mantenido', 'listo', 'ajena', 'huuuleeeerooooo', 'elegido', 'rafas', 'autentico', 'hueca', 'dominguero', 'obradoristas', 'buey', 'pequena', 'seguros', 'adineradas', 'relajate', 'fraudulentas', 'guasolina', 'masoquista', 'hobrador', 'extraordinaria', 'perros', 'lolita', 'decentes', 'anemonas', 'sras', 'bibidores', 'electoral', 'afecto', 'empresariales', 'descansa', 'analfabeta', 'agrada', 'alla', 'especial', 'gusanos', 'quemado', 'interesante', 'delicuentes', 'corruptospor', 'herario', 'secuaces', 'ledio', 'neoliberal', 'venenosas', 'holgazanes', 'punados', 'protejidos', 'sociales', 'valioso', 'mandenidos', 'escalteado', 'tisnaditas', 'tiznado', 'lado', 'personal', 'japonesa', 'cerrada', 'pica', 'jajajaaaaaa', 'pobrecito', 'malas', 'carajos', 'acarreada', 'tranzas', 'llena', 'fuerte', 'paniaguados', 'contradictoriosesas', 'servil', 'srvicente', 'usada', 'deseoso', 'actually', 'comun', 'miedosos', 'parcial', 'indefendible', 'alta', 'muertos', 'locote', 'personales', 'publico', 'inteligentes', 'licenciado', 'natural', 'mundial', 'comparado', 'pallaso', 'engana', 'pruevas', 'callen', 'hambriados', 'popular', 'sinicos', 'chente', 'desbocados', 'incongruente', 'hipocritas', 'agradecida', 'sueldos', 'repudiaria', 'demostrado', 'universal', 'corruptotes', 'demacrado', 'quesada', 'llo', 'dirigido', 'cambiado', 'sabio', 'diferente', 'stiercol', 'solita', 'comosea', 'urgentemente', 'amargadas', 'conplan', 'marranos', 'domesticopobrecitas', 'tramposo', 'vacios', 'mariguas', 'enserio', 'cacomiztles', 'ricos', 'trampososineptos', 'descanse', 'curioso', 'dichos', 'describire', 'maruiguas', 'mera', 'corruption', 'asustas', 'amlono', 'comprados', 'lectorapuro', 'nacional', 'mana', 'verguenzasaludos', 'chole', 'curruptoseso', 'putrefacto', 'hidratados', 'desfasado', 'contundente', 'desapareceresa', 'justas', 'vendidosfuera', 'invasivo', 'excelente', 'morena', 'vjejo', 'duenos', 'disfrazados', 'danado', 'advenedizos', 'ricachones', 'plenos', 'enfermisas', 'inutiles', 'mediana', 'simuladores', 'nacidos', 'reacionea', 'tremens', 'iluso', 'pasadas', 'asolear', 'tercera', 'vista', 'yegaria', 'hartos', 'alto', 'rica', 'verdulera', 'enfada', 'inmensa', 'amexico', 'chiquitos', 'ntro', 'viejo', 'lopitos', 'ponte', 'justos', 'tapendejo', 'renovada', 'vendida', 'poquita', 'maliditos', 'corruptosmercenarios', 'blanquitos', 'vivo', 'baboso', 'humilde', 'menoria', 'delicados', 'decia', 'hocicon', 'endeudado', 'organica', 'pendesta', 'quedaria', 'porinfeliz', 'corruptosy', 'q', 'razonable', 'mentales', 'humanas', 'corruptasos', 'riquillo', 'enjuicien', 'compares', 'alucines', 'importante', 'quieroen', 'solosomos', 'preocupados', 'obvio', 'pitufos', 'electrica', 'acarreas', 'enterados', 'finos', 'inmorales', 'incompetentes', 'vividora', 'harias', 'anciano', 'apatridas', 'chingandoy', 'buen', 'efectiva', 'razistas', 'experto', 'neuliberales', 'corructos', 'acusador', 'defraudadores', 'lanbiscomes', 'tranquila', 'llamado', 'perfecto', 'laserado', 'simple', 'atomica', 'quioere', 'checheas', 'pasados', 'arreglados', 'administradorcillo', 'planeado', 'derecho', 'estupidos', 'participado', 'ratificado', 'mentado', 'marranadas', 'sandeces', 'aaaay', 'severas', 'obligatorio', 'gatos', 'indignos', 'duermete', 'pocas', 'osico', 'cauarta', 'vividor', 'elitistas', 'lencho', 'impuestos', 'arrastrada', 'tiranos', 'propia', 'carino', 'importantisima', 'trasnochado', 'muchisimo', 'burradas', 'armada', 'chistosito', 'cansados', 'familiares', 'estiempo', 'tactica', 'viejas', 'pagada', 'emitidas', 'perotodos', 'aprovechados', 'inevendido', 'clasista', 'narcoas', 'gran', 'infelices', 'ciudadana', 'fertilizante', 'contados', 'claro', 'maiceadas', 'prianistas', 'diles', 'convencidos', 'inteligente', 'rociados', 'verdadera', 'voluntaria', 'etcetera', 'iguales', 'ocupado', 'cansado', 'cobardes', 'askerosas', 'extranjeros', 'complices', 'borregos', 'economica', 'ardido', 'pendejas', 'eline', 'sinico', 'senal', 'america', 'qureo', 'oficial', 'ancianos', 'energetica', 'manoseada', 'engrandecerlos', 'criminales', 'cruptos', 'marguas', 'indescriptibles', 'total', 'cuantos', 'cuscos', 'idiotisado', 'maliada', 'lacras', 'extrema', 'politiqueros', 'mantenidos', 'desfraudado', 'incuriptible', 'amlooo', 'lkenadera', 'antipatriotas', 'chspm', 'ala', 'lencha', 'acareados', 'd', 'irrefutable', 'padres', 'mega', 'blanco', 'etc', 'tipica', 'harto', 'obrera', 'llores', 'friegas', 'orgulloso', 'encabezado', 'corrptisimo', 'muneco', 'elegantes', 'chavorruco', 'sanganos', 'mariguano', 'cabada', 'minimos', 'ridiculos', 'tinoso', 'parientes', 'pagariamos', 'leido', 'viejillo', 'fuelra', 'innecesarios', 'reciente', 'abtidemocraticos', 'defensor', 'corruptelas', 'chapeados', '@uuuuuu', 'proximos', 'omosexual', 'desias', 'necesario', 'positivos', 'plurinominal', 'llenos', 'incomparable', 'intocables', 'doble', 'srpresidente', 'zanganos', 'primero', 'apistelentes', 'saludable', 'nadamas', 'tespetosox', 'aaaarranquense', 'espresidente', 'lavadora(de', 'largas', 'puras', 'rrequerido', 'rateros', 'sumbado', 'mexico', 'pios', 'dadeberia', 'veneficio', 'ganado', 'mieda', 'peca', 'tendenciosas', 'suave', 'cochinada', 'riquillos', 'hade', 'quedado', 'humanitario', 'sinsanoso', 'inestable', 'chingnd', 'pienza', 'vomitivos', 'nesesitamos', 'compradas', 'preso', 'bajo', 'usava', 'apegado', 'auspiciadas', 'imparciales', 'an', 'chin', 'pacifica', 'chachalaco', 'manosos', 'borracho', 'locuas', 'calladito', 'indeseables', 'inmoral', 'tenido', 'nuevas', 'tirado', 'petroleras', 'partodos', 'extrano', 'senil', 'hambrientos', 'compatriotasviva', 'jajakaj', 'l', 'seve', 'puros', 'crrupto', 'igualado', 'vividores', 'conocido', 'rratotassinberguensas', 'paracitos', 'sentados', 'mas', 'recaudados', 'hhuu', 'tambien', 'tremendo', 'ardida', 'valiosas', 'chentebotitas', 'minerales', 'cuasta', 'cochinos', 'integrantes', 'parasitos', 'pequeno', 'aleccionados', 'comprendanlo', 'sheet', 'qeremos', 'ferrocarriles', 'adivino', 'marihuaniado', 'plana', 'felices', 'consec', 'clasistas', 'simexicanos', 'megacorruptos', 'limpio', 'impotenciaque', 'nonesesita', 'trabajadora', 'inquietos', 'lamvehuvos', 'desgrasiado', 'jodidos', 'desvergonzados', 'mayoria', 'democracias', 'afectado', 'valiente', 'viendoesta', 'drogado', 'sinonimos', 'nosotras', 'guero', 'presidentecon', 'delincuentes', 'suficiente', 'traicionera', 'incompetente', 'ternurita', 'pulpos', 'marihuano', 'deveria', 'chacales', 'capaces', 'desgraciados', 'preciopor', 'millonario', 'mariguana', 'tonterias', 'vendidosy', 'gorda', 'caracol', 'respetoviva', 'merecido', 'veandido', 'ratotas', 'nefastas', 'rico', 'democracia', 'bonita', 'verdaderos', 'vejestorios', 'engordado', 'maravilloso', 'pensionados', 'cierto', 'bandidos', 'comprobado', 'rrs', 'electoreros', 'lgualmente', 'prianrede', 'psiquiatrico', 'indigenas', 'pelado', 'ahj', 'unidos', 'nefastos', 'quezada', 'secuestrada', 'enriquecidos', 'cronico', 'corruptisimo', 'tocado', 'prepotentes', 'alcansaria', 'presente', 'acarreados', 'delirante', 'transparente', 'contentos', 'simbergyensas', 'sakeadores', 'chayoteros', 'clarito', 'falsa', 'mismo', 'corruptas', 'vergonzoso', 'coructos', 'amanada', 'conocidos', 'unico', 'civiles', 'incurruptibles', 'senores', 'humano', 'sincero', 'logrosesto', 'ultimo', 'firmes', 'borrachales', 'sinsos', 'marihuana', 'hacersolo', 'compras', 'propios', 'desmemoriados', 'rata', 'unica', 'antidemocratas', 'judicial', 'racistas', 'computadoras', 'mensuales', 'ocultas', 'zocalo', 'cagada', 'serian', 'cubano', 'historico', 'aparescas', 'tronado', 'presidencial', 'agradecidos', 'malditas', 'respetoeste', 'acarrados', 'viva', 'metidos', 'solitos', 'mayor', 'mojadas', 'sordos', 'sencillo', 'urgente', 'verboviva', 'varcel', 'dichola', 'riquito', 'ineptos', 'meadas', 'sucios', 'visto', 'alrevez', 'peo', 'inecesario', 'duro', 'conveneciera', 'campantes', 'excesivos', 'umillados', 'gubernamental', 'nuevo', 'dadiva', 'sentidas', 'nesesitados', 'remoras', 'prianmc', 'inmenso', 'desarrollado', 'corrupto', 'consejero', 'cilencio', 'enojados', 'agradecido', 'ineficiente', 'aburre', 'acompano', 'afectados', 'claras', 'ademas', 'unicos', 'flojos', 'comodinos', 'defendible', 'maligna', 'oportunistas', 'derrotados', 'prieta', 'rapido', 'fecales', 'obrador', 'pelados', 'aereas', 'chupeteadores', 'junto', 'hozico', 'derrotada', 'ivas', 'dios', 'chochea', 'atina', 'parados', 'diria', 'ultima', 'favorecida', 'ex', 'dictador', 'marhuana', 'nesecidada', 'mandilon', 'ponzonosas', 'ine-scrupulosos', 'contrario', 'maltratado', 'asquerosos', 'obsesionado', 'genial', 'larga', 'hdschm', 'digno', 'cerebral', 'insaciables', 'mexicana', 'viejito', 'voluntario', 'amanados', 'huachicolero', 'ensucia', 'transtornado', 'entregista', 'comprada', 'apatrida', 'ladras', 'nuesteos', 'motorolo', 'ultrajada', 'huachicoleras', 'mafiosos', 'opcs', 'laca', 'irrespetuoso', 'coruptos', 'patriastraidores', 'naturales', 'desvergonzado', 'sera', 'vien', 'sandijuelas', 'malvados', 'ultimos', 'operado', 'lamentable', 'pequenos', 'recibido', 'proximo', 'digna', 'hermoso', 'abusivos', 'esquizofrenico', 'encontraras', 'comprueve', 'ratera', 'traicioneros', 'basicas', 'jajajajajjajajajjaajajajjjaajajjaano', 'lorensito', 'economico', 'chulo', 'acabeotros', 'cascarrabias', 'fascistas', 'autoritarios', 'chistoso', 'nopuedo', 'sennofox', 'rrrrratas', 'ficticias', 'precaria', 'malparridos', 'ardidos', 'cdmx', 'estupido', 'querido', 'mendigo', 'pregunteles', 'posible', 'hechos', 'tarugada', 'vicentico', 'vestida', 'martita', 'cuarta', 'hables', 'empresarial', 'botudo', 'masivo', 'traicionero', 'ardor', 'infinitas', 'traicioneras', 'mayores', 'bajos', 'vandidos', 'mariguanete', 'mendiga', 'grandioso', 'iriapero', 'alito', 'alucinado', 'callados', 'buenas', 'seno', 'amloasi', 'cundo', 'infames', 'pagados', 'neoliberales', 'autonomo', 'dekrepito', 'estadodas', 'superiores', 'economicos', 'vende-patrias', 'culeros', 'sometida', 'proximas', 'hbldr', 'oilo', 'pesadas', 'ironia', 'logrado', 'apokono', 'conq', 'italiano', 'mariguanay', 'loquito', 'reales', 'corruptosvendidos', 'ta', 'serviles', 'msrigua', 'grandecito', 'ratasss', 'injustos', 'enves', 'descarados', 'pasado', 'sientes', 'parasito', 'juridica', 'solas', 'pcasi', 'indicado', 'ignorantes', 'playeras', 'incomada', 'maaaa', 'humildes', 'fumovisente', 'solo', 'vacelina', 'cercano', 'jajajajajaja', 'ahihasta', 'fieles', 'humanista', 'desaparecete', 'toncho', 'insecto', 'callese', 'pusilanimes', 'patras', 'bitacilina', 'encarcelado', 'dueno', 'coludidos', 'guaruras', 'generosos', 'sano', 'fuchi', 'menor', 'camisas', 'llevenll', 'agancaso', 'facistas', 'sumidos', 'corajes', 'ventajosos', 'guaraguano', 'atras', 'escandalosa', 'habidos', 'agredidos', 'queles', 'politico', 'msriguana', 'mediera', 'sedientos', 'hambreados', 'molestes', 'maiceados', 'invito', 'prianista', 'combinado', 'ajeno', 'paso', 'torta', 'marihuas', 'acabado', 'expresidentes', 'ajenas', 'buenoaestecabrocontodorespetosiesqueselomeresrcuandolevanaquitarloquerobo', 'botuda', 'archirequetecontracorruptos', 'miadas', 'satrapa', 'convocados', 'psicopata', 'esbirros', 'inconforme', 'inferiores', 'amikos', 'tramposos', 'oyy', 'legitimo', 'calificativos', 'populacho', 'metodos', 'poderosos', 'mesmamente', 'putridos', 'usurpadores', 'autonomosque', 'hdch', 'buenos', 'retrasados', 'lindos', 'cerrados', 'nacionales', 'mexicanos', 'baloyan', 'bedidos', 'marig', 'amargo', 'descritos', 'raaaaaaaaatas', 'casiques', 'chentito', 'entrevistados', 'anterior', 'amlo', 'blanca', 'organizada', 'puritito', 'politicos', 'mafiososhijos', 'fortalecio', 'simulada', 'mentirosos', 'verdad', 'patriota', 'cm', 'conveniente', 'publicas', 'beneficiodos', 'natal', 'unacoca', 'jente', 'desconectado', 'nacido', 'vendidas', 'empresarios', 'incluida', 'seguidos', 'burocratas', 'cimo', 'repartes', 'celular', 'empleado', 'primer', 'borregada', 'cinicos', 'libres', 'tapaderas', 'autonomos', 'puntadas', 'remordimieno', 'tontosvendidos', 'electoraly', 'oscurito', 'sicarios', 'tristes', 'guevones', 'informados', 'racista', 'cascaraviasyonosavequeaserniquedecircon', 'conchudos', 'ladrarladrar', 'gentemuchos', 'equivocas', 'enesima', 'bandejo', 'huevosfuera', 'peleles', 'nuestreo', 'derecha', 'plurinominales', 'despreciados', 'tercer', 'mexicoviva', 'queridisimo', 'suturado', 'chachalaca', 'queria', 'mental', 'estafadores', 'antiguo', 'frutsi', 'vendidos', 'tesla', 'famosos', 'sinverhuenzas', 'corruptos', 'pendientes', 'bloqueado', 'acostumbradas', 'viboras', 'saludos', 'anteriores', 'controlado', 'corruptosfuera', 'mafia', 'enganados', 'aguadas', 'trapacerias', 'hechoahora', 'sintetica', 'basto', 'postizos', 'futuro', 'bastantes', 'sinverguenzas', 'adecuada', 'confirmado', 'corrompido', 'asistiria', 'someriado', 'merolico', 'cumpleanos', 'desonesto', 'lados', 'mexicano', 'orale', 'veras', 'nidos', 'farsantes', 'bienpero', 'traidores', 'empoderados', 'encueta', 'asecino', 'ostentados', 'aclaro', 'dulces', 'normal', 'estudiado', 'sinverguendas', 'decente', 'comerciante', 'propias', 'regalapartidos', 'clase', 'vendidosrealmente', 'carreados', 'incongruentes', 'apollemos', 'huleeeeeros', 'inflado', 'vieja', 'incomoda', 'acostumbrados', 'logica', 'verdadero', 'pendejadas', 'carroneros', 'pedorro', 'prostitutos', 'propio', 'igual', 'chapuceros', 'pensantes', 'gchclro', 'inca', 'save', 'dividido', 'foxito', 'qchaspm', 'exageradas', 'desinformada', 'fisico', 'traiciono', 'coludas', 'malos', 'cuantas', 'carruseles', 'barato', 'particulares', 'internado', 'perfectos', 'blancas', 'ipocritas', 'corto', 'ficientes', 'decrepitos', 'descerebrado', 'minimo', 'fuma', 'maxima', 'adulto', 'crueles', 'parciales', 'innecesaio', 'suprema', 'sinsera', 'democraticos', 'adinerada', 'funcional', 'mnss', 'malsanos', 'valio', 'lne', 'acarreo', 'vemdidos', 'queridos', 'deste', 'mafiosas', 'mesquinos', 'previllegios', 'escrupulos', 'vendido', 'huachicoleros', 'hdspm', 'acerquense', 'bonito', 'deshonestos', 'lisensensiado', 'insignificante', 'nato', 'paypa', 'electoralpero', 'nesecitada', 'ilegal', 'recursospuro', 'aerea', 'variadas', 'corruptisimos', 'dignos', 'senoras', 'ruquito', 'incorruptibles', 'tremenda', 'gastadera', 'manche', 'encerrado', 'renegrido', 'precidente', 'innombrables', 'humana', 'acarrearia', 'conservadores', 'decrepito', 'pura', 'cambio', 'saqueadora', 'molestos', 'limpias', 'altos', 'manana', 'mejores', 'alos', 'pedorras', 'duena', 'jajaja', 'muertas', 'cinicosratas', 'ambulantes', 'habil', 'gustosa', 'des', 'foxresentido', 'presidenciales', 'almada', 'mexicohasta', 'cean', 'deque', 'golpistas', 'sinverguenzada', 'convertidos', 'acarriados', 'anuales', 'huevos', 'visonte', 'irresponsables', 'vianello', 'mula', 'antimexicanos', 'farsante', 'falsas', 'paridos', 'recreativa', 'prometido', 'arrabaleros', 'ofencivo', 'immundas', 'stos', 'marihuanono', 'orate', 'tibia', 'viejos', 'balga', 'tubites', 'aprox', 'pseudo', 'acarrearal', 'organizado', 'margara', 'firme', 'encabezados', 'fraudulentos', 'necios', 'amado', 'bitasilina', 'dicho', 'humildeahora', 'tranquilos', 'terminada', 'desorientado', 'patriasdelincuenteshipocritasnefastos', 'ranas', 'jogosa', 'asesinos', 'pasasdos', 'vivido', 'deleales', 'correcta', 'enfermos', 'orgullosos', 'sentidos', 'senora', 'conosemosa', 'puebloson', 'vudjito', 'sercas', 'asquerosas', 'despedidos', 'arrabaleroscorruptostraidoresmentirosos', 'social', 'productivo', 'intocable', 'desesperados', 'duermase', 'panista', 'vaquetones', 'pintada', 'desquiciado', 'azteca', 'presentes', 'segundo', 'pandilla', 'zombi', 'salinas', 'gueros', 'rubio', 'corrupta', 'fueraaaaaa', 'perdidos', 'hecho', 'falsos', 'nocivos', 'basico', 'amigos', 'honrosas', 'empleados', 'feliz', 'k', 'amadas'}\n\n\n\nadj_tag = {}\nfor adj in adjs:\n    if adj in word_to_vec.keys():\n        tag = knn.predict([word_to_vec[adj]])\n        adj_tag[adj] = tag[0]\n        \nprint(list(adj_tag.items())[:10])"
  },
  {
    "objectID": "classifier.html#given-a-word-return-the-k-nearest-neighbors",
    "href": "classifier.html#given-a-word-return-the-k-nearest-neighbors",
    "title": "Classifier",
    "section": "Given a word, return the k nearest neighbors:",
    "text": "Given a word, return the k nearest neighbors:\n\ndef get_k_nearest_neighbours(word, k, word_to_vec,knn):\n    '''Given a word, return the k nearest neighbours'''\n    if word in word_to_vec.keys():\n        word_vec = [word_to_vec[word]]\n        results = knn.kneighbors(word_vec, n_neighbors=k, return_distance=True)\n        index = results[1]\n        for i in index:\n            print(df.iloc[i]['word'])\n    else:\n        print('The word is not in the vocabulary')\n        \nget_k_nearest_neighbours('perfecta', 3, word_to_vec,knn)\n\n915        buena\n651    imposible\n836     teniendo\nName: word, dtype: object"
  },
  {
    "objectID": "classifier.html#given-a-word-predict-its-category",
    "href": "classifier.html#given-a-word-predict-its-category",
    "title": "Classifier",
    "section": "Given a word, predict its category",
    "text": "Given a word, predict its category\n\ndef predict_category(word, word_to_vec, knn):\n    if word in word_to_vec.keys():\n        word_vec = [word_to_vec[word]]\n        tag = knn.predict(word_vec)\n        if tag[0] == 0.0:\n            print('The word is a vice')\n        else:\n            print('The word is a virtue')\n    else:\n        print('The word is not in the vocabulary')\n\npredict_category('perfecta', word_to_vec, knn)\n\nThe word is a vice"
  }
]